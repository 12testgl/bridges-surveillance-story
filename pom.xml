<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.jesperancinha.logistics</groupId>
    <artifactId>bridge-logistics</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <parent>
        <artifactId>spring-boot-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>2.6.4</version>
    </parent>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jesperancinha.plugins</groupId>
                <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                <version>${omni-coveragereporter-maven-plugin.version}</version>
                <configuration>
                    <fetchBranchNameFromEnv>true</fetchBranchNameFromEnv>
                    <useCoverallsCount>false</useCoverallsCount>
                    <extraSourceFolders>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                        <param>${project.basedir}/bl-simulation-data</param>
                        <param>${project.basedir}/bl-demo-server</param>
                        <param>${project.basedir}</param>
                    </extraSourceFolders>
                    <extraReportFolders>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                        <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                        <param>${project.basedir}</param>
                    </extraReportFolders>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>lcov</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jesperancinha.plugins</groupId>
                        <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                        <version>${omni-coveragereporter-maven-plugin.version}</version>
                        <configuration>
                            <useCoverallsCount>false</useCoverallsCount>
                            <extraSourceFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                                <param>${project.basedir}/bl-simulation-data</param>
                                <param>${project.basedir}/bl-demo-server</param>
                                <param>${project.basedir}</param>
                            </extraSourceFolders>
                            <extraReportFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                                <param>${project.basedir}</param>
                            </extraReportFolders>
                            <reportRejectList>
                                <param>clover.xml</param>
                            </reportRejectList>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>clover</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jesperancinha.plugins</groupId>
                        <artifactId>omni-coveragereporter-maven-plugin</artifactId>
                        <version>${omni-coveragereporter-maven-plugin.version}</version>
                        <configuration>
                            <useCoverallsCount>false</useCoverallsCount>
                            <extraSourceFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap</param>
                                <param>${project.basedir}/bl-simulation-data</param>
                                <param>${project.basedir}/bl-demo-server</param>
                                <param>${project.basedir}</param>
                            </extraSourceFolders>
                            <extraReportFolders>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-humidity-mqtt/coverage</param>
                                <param>${project.basedir}/bl-bridge-server/bl-bridge-temperature-coap/coverage</param>
                                <param>${project.basedir}</param>
                            </extraReportFolders>
                            <reportRejectList>
                                <param>lcov.info</param>
                            </reportRejectList>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <packaging>pom</packaging>
    <name>Bridge Logistics Parent</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>16</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven.compiler>3.10.1</maven.compiler>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
        <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
        <kotlin.version>1.6.10</kotlin.version>

        <spring-boot-starter-amqp.version>2.6.5</spring-boot-starter-amqp.version>
        <spring-boot-configuration-processor.version>2.6.4</spring-boot-configuration-processor.version>
        <spring-rabbit-test.version>2.4.3</spring-rabbit-test.version>

        <activemq.version>5.17.0</activemq.version>
        <amqp-client.version>5.7.1</amqp-client.version>

        <combinatoricslib3.version>3.3.3</combinatoricslib3.version>
        <javaee-api.version>8.0.1</javaee-api.version>
        <slf4j-api.version>1.7.36</slf4j-api.version>

        <postgresql.version>42.3.3</postgresql.version>

        <kotest.version>4.4.0</kotest.version>
        <kotest.version>5.2.1</kotest.version>
        <springmockk.version>3.1.1</springmockk.version>
        <kotest-extensions-spring.version>1.1.0</kotest-extensions-spring.version>
        <mockk.version>1.12.3</mockk.version>

        <lombok.version>1.18.22</lombok.version>
        <failOnMissingWebXml>false</failOnMissingWebXml>

        <arquillian-bom.version>1.5.0.Final</arquillian-bom.version>
        <commons-io.version>1.3.2</commons-io.version>

        <jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>

        <h2.version>2.1.210</h2.version>
        <gson.version>2.9.0</gson.version>
        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>
        <testcontainers.version>1.16.3</testcontainers.version>
        <jdbc.version>1.16.3</jdbc.version>

        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <scala-maven-plugin.version>4.5.6</scala-maven-plugin.version>
        <compiler-bridge_2.12.version>1.6.1</compiler-bridge_2.12.version>
        <spark.version>3.2.1</spark.version>
        <scala-library.version>2.13.8</scala-library.version>
        <spark-cassandra-connector_2.12.version>3.1.0</spark-cassandra-connector_2.12.version>
        <joda-time.version>2.10.14</joda-time.version>
        <play-json_2.12.version>2.9.2</play-json_2.12.version>
        <config.version>1.4.2</config.version>
        <jnr-posix.version>3.1.15</jnr-posix.version>
        <omni-coveragereporter-maven-plugin.version>0.3.0</omni-coveragereporter-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jesperancinha.logistics</groupId>
                <artifactId>bl-domain-repository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-amqp</artifactId>
                <version>${spring-boot-starter-amqp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.amqp</groupId>
                <artifactId>spring-rabbit-test</artifactId>
                <version>${spring-rabbit-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot-configuration-processor.version}</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>com.typesafe</groupId>
                <artifactId>config</artifactId>
                <version>${config.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.play</groupId>
                <artifactId>play-json_2.12</artifactId>
                <version>${play-json_2.12.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>com.datastax.spark</groupId>
                <artifactId>spark-cassandra-connector_2.12</artifactId>
                <version>${spark-cassandra-connector_2.12.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala-library.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_2.12</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_2.12</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_2.12</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_2.12</artifactId>
                <version>${spark.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-sbt</groupId>
                <artifactId>compiler-bridge_2.12</artifactId>
                <version>${compiler-bridge_2.12.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.jnr</groupId>
                <artifactId>jnr-posix</artifactId>
                <version>${jnr-posix.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-client</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-broker</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>activemq-kahadb-store</artifactId>
                <version>${activemq.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-api.version}</version>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${javaee-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.dpaukov</groupId>
                <artifactId>combinatoricslib3</artifactId>
                <version>${combinatoricslib3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>io.mockk</groupId>
                <artifactId>mockk</artifactId>
                <version>${mockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest.extensions</groupId>
                <artifactId>kotest-extensions-spring</artifactId>
                <version>${kotest-extensions-spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-runner-junit5</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.kotest</groupId>
                <artifactId>kotest-assertions-core-jvm</artifactId>
                <version>${kotest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.ninja-squad</groupId>
                <artifactId>springmockk</artifactId>
                <version>${springmockk.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>jdbc</artifactId>
                <version>${jdbc.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <modules>
        <module>bl-central-server</module>
    </modules>
</project>