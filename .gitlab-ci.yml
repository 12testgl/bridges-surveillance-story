services:
  - docker:dind
stages:
  - build
  - coverage
  - verify
  - test
  - docker-compose
  - update

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  CODECOV_TOKEN: $CODECOV_TOKEN
  COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN
  CODACY_PROJECT_TOKEN: $CODACY_PROJECT_TOKEN
  RENOVATE_TOKEN: $RENOVATE_TOKEN
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
image: maven:3-openjdk-16

cache:
  paths:
    - .m2/repository/
    - bl-central-server/bl-domain-repository/target
    - bl-central-server/bl-merchandise-data-collector/target
    - bl-central-server/bl-meters-readings-service/target
    - bl-central-server/bl-passengers-readings-service/target
    - bl-central-server/bl-sensor-data-collector/target
    - bl-central-server/bl-web-app/target

.verify: &verify
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  except:
    - master
verify:
  <<: *verify

maven-build:
  stage: build
  script:
    - if [ ! -f ci_settings.xml ];
        then echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/project/packages/maven_repository.html#creating-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn clean install jacoco:prepare-agent package jacoco:report | grep -v "com.github.dockerjava.zerodep.shaded.org.apache.hc.client5.http.wire"'

npm-bl-bridge-temperature-coap:
  image: node:6.3.0
  stage: build
  script:
    - cd bl-bridge-server/bl-bridge-temperature-coap && npm run test

npm-bl-bridge-humidity-mqtt:
  image: node:6.3.0
  stage: build
  script:
    - cd bl-bridge-server/bl-bridge-humidity-mqtt && npm run test

coveralls:
  stage: coverage
  script:
    - apt install python
    - 'python -m pip install --upgrade pip'
    - 'pip install omni-coveragereporter==0.0.0'
    - 'if [ -f requirements.txt ]; then pip install -r requirements.txt; fi'
    - 'pip3 install coverage'
    - 'pip3 install pytest'
    - 'pip3 install GitPython'
    - 'pip3 install requests'
    - mvn clean install jacoco:prepare-agent package jacoco:report
    - coverage run --source=bl-demo-server -m pytest && coverage json -o coverage-demo.json
    - coverage run --source=bl-simulation-data -m pytest && coverage json -o coverage-simulation.json
    - mvn omni-coveragereporter:report
  only:
    - master

update-dependencies:
  image: renovate/renovate
  stage: update
  script:
    - export RENOVATE_CONFIG=$(< renovate.json)
    - renovate
  only:
    - master
