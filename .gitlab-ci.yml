services:
  - docker:dind
stages:
  - build
  - coverage
  - reporting
  - verify
  - test
  - docker-compose
  - update

variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  CODECOV_TOKEN: $CODECOV_TOKEN
  COVERALLS_REPO_TOKEN: $COVERALLS_REPO_TOKEN
  CODACY_PROJECT_TOKEN: $CODACY_PROJECT_TOKEN
  RENOVATE_TOKEN: $RENOVATE_TOKEN
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2
image: maven:3-openjdk-16

cache:
  paths:
    - .m2/repository/

.verify: &verify
  stage: test
  script:
    - 'mvn $MAVEN_CLI_OPTS verify'
  except:
    - master
verify:
  <<: *verify

node-bl-bridge-sensors:
  image: node:16
  stage: build
  script:
    - apt update -y
    - apt install npm -y
    - cd bl-bridge-server/bl-bridge-temperature-coap
    - yarn install
    - cd ../..
    - cd bl-bridge-server/bl-bridge-humidity-mqtt
    - yarn install
  cache:
    - key: COAP_MQTT
      paths:
       - bl-bridge-server/bl-bridge-temperature-coap/coverage
       - bl-bridge-server/bl-bridge-humidity-mqtt/coverage

maven-build:
  image: maven:3.8-openjdk-17-slim
  stage: build
  cache:
    - key: MAVEN
      paths:
       - bl-central-server/bl-domain-repository/target
       - bl-central-server/bl-merchandise-data-collector/target
       - bl-central-server/bl-meters-readings-service/target
       - bl-central-server/bl-passengers-readings-service/target
       - bl-central-server/bl-sensor-data-collector/target
       - bl-central-server/bl-web-app/target
  script:
    - mvn clean install

python-coverage-demo-simulation:
  image: maven:3.8-openjdk-17-slim
  stage: coverage
  script:
    - apt update -y
    - apt install python3-pip -y
    - pip3 install coverage
    - pip3 install pytest
    - coverage run --source=bl-demo-server -m pytest && coverage json -o coverage-demo.json
    - coverage run --source=bl-simulation-data -m pytest && coverage json -o coverage-simulation.json
  only:
    - master
  needs: []
  cache:
    - key: DEMO_SIMULATION
      paths:
        - coverage-demo.json
        - coverage-simulation.json

node-coverage-coap-mqtt:
  image: node:16
  stage: coverage
  script:
    - cd bl-bridge-server/bl-bridge-temperature-coap
    - yarn add jest
    - npm run coverage
    - cd ../..
    - cd bl-bridge-server/bl-bridge-humidity-mqtt
    - yarn add jest
    - npm run coverage
  only:
    - master
  needs: ["node-bl-bridge-sensors"]
  cache:
    - key: COAP_MQTT
      paths:
       - bl-bridge-server/bl-bridge-temperature-coap/coverage
       - bl-bridge-server/bl-bridge-humidity-mqtt/coverage

maven-coverage:
  image: maven:3.8-openjdk-17-slim
  stage: coverage
  cache:
    - key: MAVEN
      paths:
       - bl-central-server/bl-domain-repository/target
       - bl-central-server/bl-merchandise-data-collector/target
       - bl-central-server/bl-meters-readings-service/target
       - bl-central-server/bl-passengers-readings-service/target
       - bl-central-server/bl-sensor-data-collector/target
       - bl-central-server/bl-web-app/target
  script:
    - mvn jacoco:prepare-agent package jacoco:report
  only:
    - master
  needs:
    - maven-build

reporting:
  image: maven:3.8-openjdk-17-slim
  stage: 'reporting'
  cache:
    - key: MAVEN
      paths:
       - bl-central-server/bl-domain-repository/target
       - bl-central-server/bl-merchandise-data-collector/target
       - bl-central-server/bl-meters-readings-service/target
       - bl-central-server/bl-passengers-readings-service/target
       - bl-central-server/bl-sensor-data-collector/target
       - bl-central-server/bl-web-app/target
    - key: COAP_MQTT
      paths:
       - bl-bridge-server/bl-bridge-temperature-coap/coverage
       - bl-bridge-server/bl-bridge-humidity-mqtt/coverage
    - key: DEMO_SIMULATION
      paths:
       - coverage-demo.json
       - coverage-simulation.json

  script:
    - mvn omni-coveragereporter:report
  only:
    - master
  needs:
    - maven-coverage
    - node-coverage-coap-mqtt
    - python-coverage-demo-simulation


update-dependencies:
  image: renovate/renovate
  stage: update
  script:
    - export RENOVATE_CONFIG=$(< renovate.json)
    - renovate
  only:
    - master
  needs: ["reporting"]
