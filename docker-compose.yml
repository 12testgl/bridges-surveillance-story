services:

  bl-central-server:
    hostname: bl-central-server
    container_name: bl-central-server
    build:
      context: bl-central-server/bl-central-streaming/.
    deploy:
      resources:
        limits:
          memory: 300M
#        reservations:
#          memory: 300M
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:15672"]
      interval: 5s
      timeout: 240s
      retries: 60
    depends_on:
      bl-train-01-rabbitmq-server:
        condition: service_healthy
      bl-bridge-01-rabbitmq-server:
        condition: service_healthy
      bl-central-psql:
        condition: service_healthy
      bl-central-cassandra:
        condition: service_healthy
    networks:
      - bl-net

  bl-readers:
    hostname: bl-readers
    container_name: bl-readers
    build:
      context: bl-central-server/bl-central-readings/.
    deploy:
      resources:
        limits:
          memory: 2000M
#        reservations:
#          memory: 2000M
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:4040"]
      interval: 5s
      timeout: 240s
      retries: 60
    depends_on:
      bl-central-kafka-server:
        condition: service_healthy
      bl-central-cassandra:
        condition: service_healthy
    networks:
      - bl-net

  bl-central-kafka-server:
    hostname: bl-central-kafka-server
    container_name: bl-central-kafka-server
    build:
      context: bl-central-server/kafka/.
    deploy:
      resources:
        limits:
          memory: 1000M
#        reservations:
#          memory: 1000M
    depends_on:
      bl-train-01-rabbitmq-server:
        condition: service_healthy
      bl-central-psql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server 127.0.0.1:9092 --topic PASSENGER --describe"]
      interval: 2s
      timeout: 30s
      retries: 30
    networks:
      - bl-net

  bl-train-01-rabbitmq-server:
    hostname: bl-train-01-rabbitmq-server
    container_name: bl-train-01-rabbitmq-server
    build:
      context: bl-train-server/rabbitmq/.
    deploy:
      resources:
        limits:
          memory: 250M
#        reservations:
#          memory: 250M
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:15672"]
      interval: 5s
      timeout: 240s
      retries: 60
    networks:
      - bl-net

  bl-bridge-01-sensors-server:
    hostname: bl-bridge-01-sensors-server
    container_name: bl-bridge-01-sensors-server
    build:
      context: bl-bridge-server/.
    deploy:
      resources:
        limits:
          memory: 100M
    depends_on:
      bl-central-kafka-server:
        condition: service_healthy
    networks:
      - bl-net

  bl-bridge-01-mosquitto_server:
    hostname: bl-bridge-01-mosquitto_server
    container_name: bl-bridge-01-mosquitto_server
    build:
      context: bl-bridge-server/mosquitto/.
    deploy:
      resources:
        limits:
          memory: 50M
    networks:
      - bl-net

  bl-bridge-01-rabbitmq-server:
    hostname: bl-bridge-01-rabbitmq-server
    container_name: bl-bridge-01-rabbitmq-server
    build:
      context: bl-bridge-server/rabbitmq/.
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 200M
    healthcheck:
      test: ["CMD", "curl", "--silent", "http://127.0.0.1:15672"]
      interval: 5s
      timeout: 240s
      retries: 60
    networks:
      - bl-net

  bl-central-psql:
    hostname: bl-central-psql
    container_name: bl-central-psql
    build:
      context: bl-central-server/bl-central-psql/.
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_MULTIPLE_DATABASES=bllogistics
    deploy:
      resources:
        limits:
          memory: 100M
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 0s
    networks:
      - bl-net

  bl-central-server-apps:
    hostname: bl-central-server-apps
    container_name: bl-central-server-apps
    build:
      context: bl-central-server/.
    expose:
      - 9000
    depends_on:
      bl-central-psql:
        condition: service_healthy
      bl-central-server:
        condition: service_healthy
      bl-train-01-rabbitmq-server:
        condition: service_healthy
      bl-central-cassandra:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 800M
#        reservations:
#          memory: 800M
    networks:
      - bl-net

  bl-central-cassandra:
    hostname: bl-central-cassandra
    container_name: bl-central-cassandra
    build:
      context: bl-central-server/bl-central-cassandra/.
    environment:
      - "MAX_HEAP_SIZE=64M"
      - "HEAP_NEWSIZE=64M"
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 500M
#        reservations:
#          memory: 500M
    networks:
      - bl-net

networks:
  bl-net:
